
set testdir [file dirname $argv0]
source $testdir/tester.tcl

ifcapable !tempdb||!view {
  finish_test
  return
}  

do_test tkt1644-1.1 {
  execsql {
    CREATE TABLE t1(a);
    INSERT INTO t1 VALUES(1);
    CREATE TABLE t2(b);
    INSERT INTO t2 VALUES(99);
    CREATE TEMP VIEW v1 AS SELECT * FROM t1;
    SELECT * FROM v1;
  }
} {1}

do_test tkt1644-1.2 {
  execsql {
    DROP VIEW v1;
    CREATE TEMP VIEW v1 AS SELECT * FROM t2;
    SELECT * FROM v1;
  }
} {99}

do_test tkt1644-1.3 {
  execsql {
    SELECT * FROM t1;
  }
} {1}

do_test tkt1644-1.4 {
  execsql {
    CREATE TEMP TABLE t1(x);
  }
  execsql {
    SELECT * FROM t1;
  }
} {}

ifcapable view {
  do_test tkt1644-2.1 {
    execsql {
      CREATE TEMP TABLE temp_t1(a, b);
    }
    set ::DB [sqlite3_connection_pointer db]
    set ::STMT [sqlite3_prepare $::DB "SELECT * FROM temp_t1" -1 DUMMY]
    execsql {
      DROP TABLE temp_t1;
    }
    list [sqlite3_step $::STMT] [sqlite3_finalize $::STMT]
  } {SQLITE_ERROR SQLITE_SCHEMA}
  
  do_test tkt1644-2.2 {
    execsql {
      CREATE TABLE real_t1(a, b);
      CREATE TEMP VIEW temp_v1 AS SELECT * FROM real_t1;
    }
    set ::DB [sqlite3_connection_pointer db]
    set ::STMT [sqlite3_prepare $::DB "SELECT * FROM temp_v1" -1 DUMMY]
    execsql {
      DROP VIEW temp_v1;
    }
    list [sqlite3_step $::STMT] [sqlite3_finalize $::STMT]
  } {SQLITE_ERROR SQLITE_SCHEMA}

  do_test tkt1644-2.3 {
    execsql {
      CREATE TEMP VIEW temp_v1 AS SELECT * FROM real_t1 LIMIT 10 OFFSET 10;
    }
    set ::DB [sqlite3_connection_pointer db]
    set ::STMT [sqlite3_prepare $::DB "SELECT * FROM temp_v1" -1 DUMMY]
    execsql {
      DROP VIEW temp_v1;
    }
    list [sqlite3_step $::STMT] [sqlite3_finalize $::STMT]
  } {SQLITE_ERROR SQLITE_SCHEMA}
}


finish_test
