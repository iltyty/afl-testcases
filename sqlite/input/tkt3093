
set testdir [file dirname $argv0]
source $testdir/tester.tcl

do_test tkt3093.1 {
  db eval {
    CREATE TABLE t1(x);
    INSERT INTO t1 VALUES(1);
    SELECT * FROM t1
  }
} {1}

do_test tkt3093.2 {
  catch {sqlite3_enable_shared_cache 0}
  sqlite3 db2 test.db
  db2 eval {
    SELECT * FROM t1
  }
} {1}

do_test tkt3093.3 {
  # This will be the busy callback for connection db2.  On the first
  # busy callback, commit the transaction in db.  This should clear
  # the lock so that there should not be a second callback.  If the
  # busy handler is called a second time, then fail so that we get
  # timeout.
  proc busy_callback {cnt} {
    if {$cnt==0} {
      db eval COMMIT
      return 0
    } else {
      return 1
    }
  }
  db2 busy ::busy_callback

  # Start a write transaction on db.
  db eval {
     BEGIN;
     INSERT INTO t1 VALUES(2);
  }

  # Attempt to modify the database on db2
  catchsql {
     UPDATE t1 SET x=x+1;
  } db2
} {0 {}}

do_test tkt3093.4 {
  db eval {SELECT * FROM t1}
} {2 3}
do_test tkt3093.5 {
  db2 eval {SELECT * FROM t1}
} {2 3}
db2 close

finish_test
